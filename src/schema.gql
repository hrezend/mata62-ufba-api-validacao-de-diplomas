# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthType {
  user: User!
  token: String!
}

type User {
  id: Int!
  email: String!
  cpf: String!
  phone: String!
  name: String!
  createdAt: Timestamp!
  updatedAt: Timestamp!
  roleId: Float!
  role: Role
  instituitionId: Float!
  instituition: Instituition
}

"""
`Date` type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

type Role {
  id: Int!
  name: String!
  routines: String!
  users: [User!]
}

type Instituition {
  id: Int!
  name: String!
  address: String!
  city: String!
  state: String!
  keeper: String!
  mecCredibility: String!
  isPartner: Boolean!
  users: [User!]
  courses: [Course!]
  diplomas: [Diploma!]
}

type Course {
  id: Int!
  name: String!
  degree: String!
  eMecCode: String!
  douAuthorization: String!
  douRecognition: String!
  douRenovation: String!
  observation: String!
  partnerInstituitionId: Float!
  instituition: Instituition
  diplomas: [Diploma!]
}

type Diploma {
  id: Int!
  studentName: String!
  courseId: Float!
  course: Course
  validationInstituitionId: Float
  validationInstituition: Instituition
  isValidated: Boolean!
  validatedAt: Timestamp
  createdAt: Timestamp!
}

type Query {
  findAllUsers: [User!]!
  findUserById(id: Float!): User!
  findAllRoles: [Role!]!
  findAllCourses: [Course!]!
  findCourseById(id: Float!): Course!
  findAllDiplomas: [Diploma!]!
  findDiplomaById(id: Float!): Diploma!
  findAllInstituitions: [Instituition!]!
  findInstituitionById(id: Float!): Instituition!
}

type Mutation {
  login(data: AuthInput!): AuthType!
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!): User!
  updateUserPassword(data: UserUpdatePasswordInput!): User!
  deleteUser(id: Float!): Boolean!
  createCourse(data: CourseCreateInput!): Course!
  updateCourse(data: CourseUpdateInput!): Course!
  deleteCourse(id: Float!): Boolean!
  createDiploma(data: DiplomaCreateInput!): Diploma!
  updateDiploma(data: DiplomaUpdateInput!): Diploma!
  setIsDiplomaValidated(id: Float!): Diploma!
  deleteDiploma(id: Float!): Boolean!
  createInstituition(data: InstituitionCreateInput!): Instituition!
  updateInstituition(data: InstituitionUpdateInput!): Instituition!
  deleteInstituition(id: Float!): Boolean!
}

input AuthInput {
  email: String!
  password: String!
}

input UserCreateInput {
  email: String!
  name: String!
  cpf: String!
  phone: String!
  password: String!
  roleId: Float!
  instituitionId: Float!
}

input UserUpdateInput {
  email: String
  phone: String
  roleId: Float
}

input UserUpdatePasswordInput {
  password: String!
}

input CourseCreateInput {
  name: String!
  degree: String!
  eMecCode: String!
  douAuthorization: String!
  douRecognition: String!
  douRenovation: String!
  observation: String!
  partnerInstituitionId: Float!
}

input CourseUpdateInput {
  id: Float!
  name: String
  degree: String
  eMecCode: String
  douAuthorization: String
  douRecognition: String
  douRenovation: String
  observation: String
  partnerInstituitionId: Float
}

input DiplomaCreateInput {
  studentName: String!
  courseId: Float!
}

input DiplomaUpdateInput {
  id: Float!
  studentName: String
  courseId: Float!
}

input InstituitionCreateInput {
  name: String!
  address: String!
  city: String!
  state: String!
  keeper: String!
  mecCredibility: String!
  isPartner: Boolean!
}

input InstituitionUpdateInput {
  id: Float!
  name: String
  address: String
  city: String
  state: String
  keeper: String
  mecCredibility: String
  isPartner: Boolean
}
